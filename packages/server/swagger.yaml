openapi: 3.0.3
info:
  title: Mernt Example API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.0.1

paths:
  # [GET] ping
  /ping:
    get:
      tags:
        - ping
      summary: Checks if the server is running [not built]
      responses:
        200:
          description: Server is up and running.
        default:
          description: Something is wrong.
  # [POST] login
  /login:
    post:
      tags:
        - auth
      summary: Returns auth token [not built]
      security: [] # No security
      responses:
        200:
          description: User logged in.
        400:
          description: Invalid user data. User may already exist.
        409:
          description: User data not provided in request.
  # [POST] register
  /register:
    post:
      tags:
        - auth
      summary: Creates new user and returns user data
      security: [] # No security
      responses:
        201:
          description: User registration successful.
        400:
          description: Incorrect email or password.
        409:
          description: User data not provided in request.

  # [GET] users
  /users:
    get:
      tags:
        - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] users
    post:
      tags:
        - users
      summary: Add User
      parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  # [GET] users/id
  /users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  users:
    type: object
    required:
      - email
      - password
      - username
    properties:
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
      username:
        type: string
        description: user Username

schemes:
  - https
  - http
